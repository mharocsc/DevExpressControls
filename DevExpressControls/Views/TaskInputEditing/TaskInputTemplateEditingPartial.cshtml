@Html.DevExpress().GridView(settings =>
{
    settings.Name = "TaskInputGrid";
    settings.KeyFieldName = "TaskID";
    settings.CallbackRouteValues = new { Controller = "TaskInputEditing", Action = "TaskInputTemplateEditingPartial" };

    settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "TaskInputEditing", Action = "TaskInputTemplateEditingAddNew" };
    settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "TaskInputEditing", Action = "TaskInputTemplateEditingUpdate" };
    settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "TaskInputEditing", Action = "TaskInputTemplateEditingDelete" };
    settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;

    settings.CommandColumn.Visible = true;
    settings.CommandColumn.ShowNewButtonInHeader = true;
    settings.SettingsCommandButton.NewButton.Image.IconID = IconID.ActionsAdditem16x16;
    settings.SettingsCommandButton.NewButton.ButtonType = GridCommandButtonRenderMode.Image;
    settings.CommandColumn.ShowDeleteButton = true;
    settings.CommandColumn.ShowEditButton = true;
    settings.SettingsPopup.EditForm.Width = 600;

    settings.Styles.Header.HorizontalAlign = HorizontalAlign.Center;
    settings.Width = Unit.Percentage(80);
    settings.Settings.ShowFilterRow = true;
    settings.Settings.GridLines = System.Web.UI.WebControls.GridLines.Vertical;

    settings.SettingsBehavior.AllowSelectByRowClick = true;
    settings.SettingsBehavior.ConfirmDelete = true;

    settings.SettingsLoadingPanel.Mode = GridViewLoadingPanelMode.ShowOnStatusBar;

    settings.SettingsPager.Position = PagerPosition.Bottom;
    settings.SettingsPager.FirstPageButton.Visible = true;
    settings.SettingsPager.LastPageButton.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Visible = true;

    settings.Columns.Add(column =>
    {
        column.FieldName = "Name";
        column.Caption = "Task ID";
        column.Width = 100;
        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.SortOrder = DevExpress.Data.ColumnSortOrder.Ascending;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "Description";
        column.Caption = "Description";
        column.Width = 300;
        column.ColumnType = MVCxGridViewColumnType.TextBox;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "StartDate";
        column.Caption = "Start Date";
        column.Width = 100;
        column.ColumnType = MVCxGridViewColumnType.DateEdit;
        column.PropertiesEdit.DisplayFormatString = "d/MM/yyyy";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "EndDate";
        column.Caption = "End Date";
        column.Width = 100;
        column.ColumnType = MVCxGridViewColumnType.DateEdit;
        column.PropertiesEdit.DisplayFormatString = "d/MM/yyyy";
    });
    foreach (var item in ViewBag.SummaryFields)
    {
        settings.Columns.Add(column =>
        {
            column.FieldName = "Summary" + item.FieldLabel;
            column.Caption = item.FieldLabel;
            column.Width = 100;
            column.ColumnType = MVCxGridViewColumnType.TextBox;
        });
    }

    settings.SetEditFormTemplateContent(c => {
        Html.DevExpress().FormLayout(formLayoutSettings =>
        {
            formLayoutSettings.Name = "FormLayoutTaskInput";
            formLayoutSettings.Width = Unit.Percentage(100);
            formLayoutSettings.ColCount = 2;

            formLayoutSettings.Items.Add(i =>
            {
                i.FieldName = "Name";
                i.Caption = "Task ID";
                i.NestedExtension().TextBox(s =>
                {
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.ShowModelErrors = true;
                    s.Width = Unit.Percentage(50);
                });
            });
            formLayoutSettings.Items.Add().FieldName = "Description";
            formLayoutSettings.Items.Add(i =>
            {
                i.FieldName = "StartDate";
                i.Caption = "Start Date";
            });
            formLayoutSettings.Items.Add(i =>
            {
                i.FieldName = "EndDate";
                i.Caption = "End Date";
            });
            foreach (var item in ViewBag.SummaryFields)
            {
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "Summary" + item.FieldLabel;
                    i.Caption = item.FieldLabel;
                });
            }
            formLayoutSettings.Items.AddEmptyItem();
            formLayoutSettings.Items.Add(i =>
            {
                i.ShowCaption = DefaultBoolean.False;
            }).SetNestedContent(() =>
            {
                ViewContext.Writer.Write("<div style='float:right'>");
                Html.DevExpress().Button(
                    btnSettings =>
                    {
                        btnSettings.Name = "btnUpdate";
                        btnSettings.Text = "Update";
                        btnSettings.ClientSideEvents.Click = "function(s, e){ TaskInputGrid.UpdateEdit(); }";
                    }).Render();
                Html.DevExpress().Button(
                    btnSettings =>
                    {
                        btnSettings.Name = "btnCancel";
                        btnSettings.Text = "Cancel";
                        btnSettings.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                        btnSettings.ClientSideEvents.Click = "function(s, e){ TaskInputGrid.CancelEdit(); }";
                    }).Render();
                ViewContext.Writer.Write("</div>");
            });
        })
        .Bind(ViewData["EditableTask"] ?? c.DataItem)
        .Render();
    });
    settings.PreRender = (sender, e) =>
    {
        ((MVCxGridView)sender).StartEdit(1);
    };
}).Bind(Model).GetHtml()
